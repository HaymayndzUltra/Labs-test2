---
alwaysApply: true
description: "TAGS: [orchestration,project,bootstrap] | TRIGGERS: bootstrap,analyze,plan,execute,review,portfolio | SCOPE: project-rules | DESCRIPTION: Project-aware trigger plan that asks minimal questions and emits concrete commands."
---

# Project Trigger Orchestrator

## Goal
- Reduce triggers to one orchestrator call.
- Ask minimal questions if context is missing.
- Select stack via policy DSL + registry manifests.
- Emit exact, copy-pasteable commands (dry-run first).

## Minimal questions (only if missing)
1. project_type: fullstack | api | web | mobile | microservices
2. industry: healthcare | finance | ecommerce | saas | enterprise
3. frontend (if web/fullstack/mobile): nextjs | nuxt | angular | expo | none
4. backend (if api/fullstack/microservices): fastapi | django | nestjs | go | none
5. database: postgres | mongodb | firebase | none
6. auth: auth0 | firebase | cognito | custom | none
7. deploy: aws | azure | gcp | vercel | self-hosted
8. compliance (optional): hipaa | gdpr | sox | pci | none
9. name: <project_name>

## Defaults (if user skips)
- healthcare + fullstack → nextjs + fastapi, postgres, auth0, compliance=hipaa
- finance + api → go, postgres, cognito, compliance=sox,pci
- ecommerce + fullstack → nextjs + django, postgres, firebase, compliance=pci,gdpr
- saas + api → django, postgres, auth0
- enterprise + web → nextjs (o angular), api → nestjs, postgres, cognito

## Decision sources
- Rules: .cursor/rules/master-rules/* and .cursor/rules/common-rules/*
- Workflows: .cursor/dev-workflow/*
- Policy DSL: .cursor/dev-workflow/policy-dsl/*
- Registry/manifests: template.manifest.json per template

## Emit in-order triggers and commands

1) Rules init
- Apply kernel governance: .cursor/rules/kernel/00-governance.mdc
- Apply context bootstrap: .cursor/rules/kernel/02-context-bootstrap.mdc
- Apply security overlay: .cursor/rules/kernel/01-security-overlay.mdc
- Run:
  - export ROUTER_CACHE=on
  - export ROUTER_LRU_SIZE=512

2) Bootstrap
- Apply instructions from .cursor/dev-workflow/0-bootstrap-your-project.md
- Run:
  - python scripts/doctor.py
  - ./scripts/generate_client_project.py --list-templates | cat

3) PRD
- Apply instructions from .cursor/dev-workflow/1-create-prd.md
- (Optional) Apply instructions from .cursor/dev-workflow/1-create-client-specific-prd.md

4) Planning
- Apply instructions from .cursor/dev-workflow/2-generate-tasks.md
- Run: nox -s generator

5) Execution
- Apply instructions from .cursor/dev-workflow/3-process-tasks.md
- Run discovery: ./scripts/generate_client_project.py --list-templates | cat
- Dry-run (registry/manifest-aware; with --workers):
  - ./scripts/generate_client_project.py --name {{NAME}} --industry {{INDUSTRY}} --project-type {{PROJECT_TYPE}} --frontend {{FRONTEND}} --backend {{BACKEND}} --database {{DATABASE}} --auth {{AUTH}} --deploy {{DEPLOY}} {{#if COMPLIANCE}}--compliance {{COMPLIANCE}}{{/if}} --workers {{WORKERS|8}} --dry-run --yes
- Actual generate (remove --dry-run):
  - ./scripts/generate_client_project.py --name {{NAME}} --industry {{INDUSTRY}} --project-type {{PROJECT_TYPE}} --frontend {{FRONTEND}} --backend {{BACKEND}} --database {{DATABASE}} --auth {{AUTH}} --deploy {{DEPLOY}} {{#if COMPLIANCE}}--compliance {{COMPLIANCE}}{{/if}} --workers {{WORKERS|8}} --yes
- Unified template test bootstrap (only for chosen stacks):
  - Backend fastapi: scripts/setup_template_tests.sh fastapi
  - Backend django: scripts/setup_template_tests.sh django
  - Frontend nextjs: scripts/setup_template_tests.sh next
  - Frontend angular: scripts/setup_template_tests.sh angular
- Optional router tuning:
  - export ROUTER_CACHE=on
  - export ROUTER_LRU_SIZE=1024

6) QA/Review/PR
- Apply instructions from .cursor/dev-workflow/4-implementation-retrospective.md
- Apply instructions from .cursor/dev-workflow/5-background-agent-coordination.md
- Apply instructions from .cursor/dev-workflow/pr-description.md
- Apply instructions from .cursor/dev-workflow/pr-evidence.md
- Run:
  - nox -s generator
  - (optional) nox -s fastapi
  - (optional) nox -s django
  - (optional) nox -s next
  - (optional) nox -s angular

7) Portfolio/Scale (optional)
- Apply instructions from .cursor/dev-workflow/6-client-portfolio-manager.md
- Apply instructions from .cursor/dev-workflow/6-update-all.md

8) Context utility (optional)
- Run:
  - export CONTEXT_PRESERVATION=active
  - export CONTEXT_FEATURE_ID=<your_feature_id>